name: ðŸ“Š Atualizar Dados das ParÃ³quias

on:
  schedule:
    - cron: '*/10 * * * *'  # A cada 10 minutos
  workflow_dispatch:  # Permite execuÃ§Ã£o manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Buscar dados da planilha
      env:
        SHEET_ID: ${{ secrets.SHEET_ID }}
      run: |
        node -e "
        const https = require('https');
        const fs = require('fs');
        
        const SHEET_ID = process.env.SHEET_ID;
        const url = \`https://docs.google.com/spreadsheets/d/\${SHEET_ID}/export?format=csv&gid=0\`;
        
        https.get(url, (res) => {
          let data = '';
          res.on('data', chunk => data += chunk);
          res.on('end', () => {
            const lines = data.split('\n').slice(1).filter(line => line.trim());
            const paroquias = {};
            
            lines.forEach(line => {
              const cols = line.split(',');
              if (cols.length >= 2) {
                const paroquia = cols[1]?.replace(/\"/g, '').trim();
                if (paroquia) {
                  paroquias[paroquia] = (paroquias[paroquia] || 0) + 1;
                }
              }
            });
            
            const resultado = {
              ultima_atualizacao: new Date().toLocaleString('pt-BR', {timeZone: 'America/Fortaleza'}),
              total_inscricoes: Object.values(paroquias).reduce((a, b) => a + b, 0),
              paroquias: Object.entries(paroquias)
                .sort(([,a], [,b]) => b - a)
                .reduce((obj, [nome, count]) => ({...obj, [nome]: count}), {})
            };
            
            fs.writeFileSync('dados.json', JSON.stringify(resultado, null, 2));
            console.log('Dados atualizados:', Object.keys(paroquias).length, 'parÃ³quias processadas');
          });
        });
        "
        
    - name: Commit e push dos dados atualizados
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dados.json
        git diff --staged --quiet || git commit -m "ðŸ“Š Atualizar dados das parÃ³quias - $(date)"
        git push
