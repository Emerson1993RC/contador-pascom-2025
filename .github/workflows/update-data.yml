name: 📊 Atualizar Dados das Paróquias (Lista)
on:
  schedule:
    - cron: '*/10 * * * *'  # A cada 10 minutos
  workflow_dispatch:  # Permite execução manual

jobs:
  update-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Instalar dependências
      run: npm install node-fetch@2
      
    - name: Buscar dados da aba Lista
      env:
        SHEET_ID: ${{ secrets.SHEET_ID }}
      run: |
        node -e "
        import fs from 'fs';
        import fetch from 'node-fetch';

        const SHEET_ID = process.env.SHEET_ID;
        const GID_LISTA = '169192893'; // GID específico da aba Lista
        const url = \`https://docs.google.com/spreadsheets/d/\${SHEET_ID}/export?format=csv&gid=\${GID_LISTA}\`;

        console.log('📊 Buscando dados da aba Lista...');
        console.log('🎯 GID da Lista:', GID_LISTA);
        console.log('🔗 URL:', url);

        fetch(url, { redirect: 'follow' })
          .then(res => {
            if (!res.ok) throw new Error(\`❌ Erro HTTP: \${res.status}\`);
            return res.text();
          })
          .then(data => {
            console.log('✅ Dados recebidos da aba Lista');
            console.log(\`📏 Tamanho dos dados: \${data.length} caracteres\`);
            console.log('📄 Primeiras 500 chars:');
            console.log(data.substring(0, 500));
            console.log('\\n' + '='.repeat(50));

            fs.writeFileSync('dados.csv', data);
            console.log('💾 Arquivo dados.csv salvo com sucesso!');
          })
          .catch(err => {
            console.error('❌ Erro ao buscar dados:', err.message);
            process.exit(1);
          });
        "
        
    - name: Mostrar resultado final
      run: |
        echo "📄 Dados extraídos da aba Lista (GID: 169192893):"
        head -n 10 dados.csv
        echo ""
        echo "🎯 CSV baixado com sucesso!"
        
    - name: Commit e push dos dados atualizados
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add dados.csv
        git diff --staged --quiet || git commit -m "📊 Dados da aba Lista atualizados - $(date)"
        git push
